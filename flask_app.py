import vk_api
from RASPIS import TimeChecker, savelast, GetRaspis, important_checker, saveZoom, loadZoom
from flask import Flask, Response, request
from TeleScout import MessageFilter
import random
import telebot

with open('Token') as f:
    teleToken = f.readline().replace('\n', '', 1)
    token = f.readline()

bot = telebot.TeleBot(teleToken)
bot.set_webhook('https://Zeportuss.pythonanywhere.com/teleRequest')

vk_session = vk_api.VkApi(token=token)
vk = vk_session.get_api()

app = Flask(__name__)


#TESTING –≤–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—â–∏–∫–∞. –ü—Ä–∏ –Ω–µ–º –≤—Å–µ ID, –æ—Ç–ª–∏—á–Ω—ã–µ –æ—Ç testerID –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç.
TESTING = False
testerID = 366782296

def GetUsersId():
    user_id_items = vk.groups.getMembers(group_id='207336652')
    return user_id_items['items']


def sender(id, text, isTele):
    if isTele:
        return text
    else:
        try:
            vk.messages.send(user_id=id, message=text, random_id=random.getrandbits(64))
        except: pass


##–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
def RaspisForDay(id, isTele):
    return sender(id, '\n'.join(filter(None, GetRaspis(0))), isTele)


helpDict = (
    '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:',
    '–í—Ç–æ—Ä–Ω–∏–∫:',
    '–°—Ä–µ–¥–∞:',
    '–ß–µ—Ç–≤–µ—Ä–≥:',
    '–ü—è—Ç–Ω–∏—Ü–∞:'
)
reversedHelpDict = {
    '–ø–Ω': 0,
    '–≤—Ç': 1,
    '—Å—Ä': 2,
    '—á—Ç': 3,
    '–ø—Ç': 4,
}


def RaspisForWeek(id, isTele):
    return sender(id, '\n'.join([helpDict[i] + '\n' + '\n'.join(filter(None, day))
                          for i, day in enumerate(GetRaspis(1))]), isTele)


def RaspisForWeekDay(id, weekDay, isTele):
    return sender(id, '\n'.join(filter(None, GetRaspis(1)[weekDay])), isTele)


@app.route('/')
def Main():
    PushMessage = TimeChecker()
    if PushMessage:
        lessons_zoom_edit = loadZoom() # –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–∞—Ä–∞ –ø—Ä–æ—à–ª–∞, —É–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Å—ã–ª–∫–µ –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞.
        for i in lessons_zoom_edit:
            if i in PushMessage and i != '#–∞–∏–≥': lessons_zoom_edit[i] = '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –∑–∞–Ω—è—Ç–∏–µ –≤ –≠–ò–û–°. –ù–æ –º–æ–∂–µ—Ç –∏ —Å—Å—ã–ª–∫—É –µ—â–µ –Ω–µ —Å–∫–∏–Ω—É–ª–∏.'
        saveZoom(lessons_zoom_edit)

        savelast()
        for i in GetUsersId():
            if (not TESTING) or (TESTING and i == testerID):
                sender(i, PushMessage, False)
        return "–Ø –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–∏–ª"
    return "–ù–µ—á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å "


@app.route('/reset')
def Reset():
    savelast(t=False)
    return '–û—á–∏—Å—Ç–∏–ª!'


def CommandFilter(id, msg, isTele):
    msg = msg.lower()  # –ê –≤–æ—Ç —Ç—É—Ç —è –µ–≥–æ –≤–µ—Ä–Ω—É–ª, —Ç–∞–∫ –∫–∞–∫ —Ç—É—Ç —Å—Å—ã–ª–æ–∫ —É–∂–µ –Ω–∏–∫–∞–∫–∏—Ö –Ω–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è.
    if msg == "—Ä":
        return RaspisForDay(id, isTele)
    elif msg == "–≤":
        return RaspisForWeek(id, isTele)
    elif msg == '—Å':
        return sender(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚úåüèª\n–≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –æ –ø–∞—Ä–µ –∑–∞ 15 –º–∏–Ω—É—Ç.\n–°–æ–≤–µ—Ç—É–µ–º –Ω–µ –æ—Ç–∫–ª—é—á–∞–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n‚Äú—Ä‚Äù - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å\n‚Äú–≤‚Äù - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é,\n‚Äú–ø–Ω‚Äù - ‚Äú–ø—Ç‚Äù - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å', isTele)
    elif msg in reversedHelpDict:
        return RaspisForWeekDay(id, reversedHelpDict[msg], isTele)
    elif not isTele: # –¢—É—Ç —Å—Ç–æ–∏—Ç —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ, —á—Ç–æ–±—ã –±–æ—Ç –≤ —Ç–µ–ª–µ–≥–µ –Ω–µ –æ—Ç—Å—ã–ª–∞–ª —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        return sender(id, '–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏ "–°", —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.', isTele)

@app.route('/GetEvent', methods=['POST'])
def GetEvent():
    data = request.get_json()

    if data['type'] =='confirmation':
        return '52e326ff'

    if data['type'] == 'group_join':
            sender(data['object']['user_id'], '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚úåüèª\n–≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –æ –ø–∞—Ä–µ –∑–∞ 15 –º–∏–Ω—É—Ç.\n–°–æ–≤–µ—Ç—É–µ–º –Ω–µ –æ—Ç–∫–ª—é—á–∞–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n‚Äú—Ä‚Äù - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å\n‚Äú–≤‚Äù - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é,\n‚Äú–ø–Ω‚Äù - ‚Äú–ø—Ç‚Äù - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å')

    if data['type'] == 'message_new':
        msg = data['object']['message']['text'] # –Ø —É–±—Ä–∞–ª lower —Ç—É—Ç –ø–æ—Ç–æ–º—É, —á—Ç–æ –∏–Ω–∞—á–µ —Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –Ω–µ–≤–µ—Ä–Ω–æ–π.
        id = data['object']['message']['peer_id']
        check_id = data['object']['message']['from_id']
        if check_id != id:
            important_checker(msg)
        elif (not TESTING) or (TESTING and id == testerID):
            if id in GetUsersId():
                CommandFilter(id, msg, False)
            else:
                sender(id, '–¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω! –Ø —Å —Ç–∞–∫–∏–º–∏ –Ω–µ –æ–±—â–∞—é—Å—å.')
        elif check_id == id: sender(id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω. –¢–∞–∫ —á—Ç–æ —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –∏ –µ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ—Ö–æ–¥—è—Ç –Ω–∞ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ —Å–µ—Ä–≤–µ—Ä–µ. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∑–∂–µ.')

    return Response('ok'), 200


@app.route('/teleRequest', methods = ['POST']) # –¢—É—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∫–æ–≤–∞—Ç—å—Å—è —Ç–µ–ª–µ–≥—Ä–∞–º —Å–∫–∞—É—Ç
def GetUpdates():
    data = request.get_json()

    if 'message' in data and 'title' in data['message']['chat'] and 'text' in data['message']:  # –¢–∞–∫ –ø—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –Ω–∞—à–µ —Å–æ–±—ã—Ç–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏–∑ –≥—Ä—É–ø–ø—ã —Ç–µ–ª–µ–≥—Ä–∞–º–º.
        if data['message']['chat']['title'] == '–ü–æ—Ç–æ–∫ –ë–í–¢21':
            important_checker('#–≤—ã—á—Ç–µ—Ö ' + data['message']['text'])  # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ—à—Ç–µ–≥, —Ç–∞–∫ –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç –≤–Ω–µ—Å–µ—Ç —Å—Å—ã–ª–∫—É –≤ –ø–∞–º—è—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ö–µ—à—Ç–µ–≥. –¢–æ –µ—Å—Ç—å —Ö–µ—à—Ç–µ–≥ —ç—Ç–æ –∫–∞–∫ –ø—É—Ç—å.
        elif data['message']['chat']['title'] == '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ò–¢ –ë–í–¢21 04-06':
            important_checker('#–∏–Ω—Ñ—Ç–µ—Ö ' + data['message']['text'])

    if 'message' in data and data['message']['chat']['type'] == 'private':
        msg = data['message']['text']
        userId = data['message']['from']['id']

        teleData = MessageFilter(msg)
        if teleData[1] == 2: teleData[0] = CommandFilter(0, teleData[0], True) # –ü—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è –≤ teleData[0] —Ä, –≤ –∏–ª–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏. –ü–æ—Å–ª–µ —á–µ–≥–æ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        bot.send_message(userId, teleData[0])
    return ''